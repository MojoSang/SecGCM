from oram import OptimalORAM
from dijkstra import dijkstra

# 0 -> 1: 1
# 0 -> 3: 1
# 0 -> 4: 1
# 1 -> 4: 1
# 2 -> 3: 1
# 4 -> 2: 1

	
edges=OptimalORAM(7,entry_size=(3,2,1))
edges[0]=(1,1,0)
edges[1]=(3,1,0)
edges[2]=(4,1,1)

edges[3]=(4,1,1)

edges[4]=(3,1,1)

edges[5]=(3,0,1)

edges[6]=(2,1,1)

e_index=OptimalORAM(5,entry_size=3)

e_index[0]=0
e_index[1]=3
e_index[2]=4
e_index[3]=5
e_index[4]=5

source=sint(0)

res=dijkstra(source,edges,e_index,OptimalORAM)
	

@for_range(res.size)
def _(i):
    #import util
    print_ln('from %s to %s at cost %s via vertex %s', source.reveal(), i,
             res[i][0].reveal(), res[i][1].reveal())
